Q: If $6 is greater than zero, store in $3 the value of ($4 + $5); otherwise if $6 is not greater than zero, store in $3 the value of ($4 - $5). Afterwards, store in $4 the value of ($4 + $6).

(You will need labels, bgtz, add, sub, and j. Do not worry about overflow.)

A:

a = $3
b = $4
c = $5
d = $6
e

if ( d > 0){
	a = b + c; 
}else{
	a = b - c;
}

b = b + d;

//doesn't work, branches to foo even when $6 is not greater than 0

li $6, 0x00000000
bgtz $6, foo
foo: add $3, $4, $5
sub $3, $4, $5
add $4, $4, $6


=============

Q: If $7 is less than or equal to zero, jump to address 0x7600FFFC, otherwise jump to address 0x70000000.

(Use blez and jr.)

A:

li $7, 0
blez $7, foo
foo: li $3, 0x7600FFFC
li $2, 0x70000000
jr $2


=============

Q: Translate this Javascript code into an assembly equivalent.

(Use register 3 for x and register 4 for y.)

	var x = 15;
	if (x > 29) {
		x = 35;
	}
	var y = x * -2;

A: